Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    THEN
    OBJECT
    NEW
    MINUS
    DOT
    TO
    PLUS
    SEQUENCE_FILE
    END
    DIVIDE
    TIMES
    RDD
    ELSE
    IF

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> BLOCK_STMT
Rule 2     BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE
Rule 3     STMT_INIT -> STMT_INIT STMT
Rule 4     STMT_INIT -> <empty>
Rule 5     STMT -> BLOCK_STMT
Rule 6     STMT -> FOR_STMT
Rule 7     STMT -> WHILE_STMT
Rule 8     FOR_STMT -> FOR ITERABLE BLOCK_STMT
Rule 9     WHILE_STMT -> WHILE ID BLOCK_STMT
Rule 10    enter_scope -> <empty>
Rule 11    exit_scope -> <empty>
Rule 12    ITERABLE -> ID IN CONTAINER
Rule 13    CONTAINER -> ID
Rule 14    DECL_INIT -> DECL_INIT DECL
Rule 15    DECL_INIT -> <empty>
Rule 16    DECL -> VAL_DECL
Rule 17    DECL -> VAR_DECL
Rule 18    VAL_DECL -> VAL ID EQUALS NUMBER
Rule 19    VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE
Rule 20    VAL_DECL -> VAL ID EQUALS RDD_INIT
Rule 21    VAR_DECL -> VAR ID EQUALS NUMBER
Rule 22    VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE
Rule 23    VAR_DECL -> VAR ID EQUALS RDD_INIT
Rule 24    USER_DEFINE_VALUE -> USER_DEFINE STRING
Rule 25    RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN

Terminals, with rules where they appear

DIVIDE               : 
DOT                  : 
ELSE                 : 
END                  : 
EQUALS               : 18 19 20 21 22 23
FOR                  : 8
ID                   : 9 12 13 18 19 20 21 22 23
IF                   : 
IN                   : 12
LBRACE               : 2
LPAREN               : 25
MINUS                : 
NEW                  : 
NUMBER               : 18 21
OBJECT               : 
PLUS                 : 
RBRACE               : 2
RDD                  : 
RPAREN               : 25
SEQUENCE_FILE        : 
STRING               : 24 25
TEXT_FILE            : 25
THEN                 : 
TIMES                : 
TO                   : 
USER_DEFINE          : 24
VAL                  : 18 19 20
VAR                  : 21 22 23
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

BLOCK_STMT           : 1 5 8 9
CONTAINER            : 12
DECL                 : 14
DECL_INIT            : 2 14
FOR_STMT             : 6
ITERABLE             : 8
PROGRAM              : 0
RDD_INIT             : 20 23
STMT                 : 3
STMT_INIT            : 2 3
USER_DEFINE_VALUE    : 19 22
VAL_DECL             : 16
VAR_DECL             : 17
WHILE_STMT           : 7
enter_scope          : 2
exit_scope           : 

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . BLOCK_STMT
    (2) BLOCK_STMT -> . LBRACE enter_scope DECL_INIT STMT_INIT RBRACE

    LBRACE          shift and go to state 1

    PROGRAM                        shift and go to state 3
    BLOCK_STMT                     shift and go to state 2

state 1

    (2) BLOCK_STMT -> LBRACE . enter_scope DECL_INIT STMT_INIT RBRACE
    (10) enter_scope -> .

    VAL             reduce using rule 10 (enter_scope -> .)
    VAR             reduce using rule 10 (enter_scope -> .)
    RBRACE          reduce using rule 10 (enter_scope -> .)
    LBRACE          reduce using rule 10 (enter_scope -> .)
    FOR             reduce using rule 10 (enter_scope -> .)
    WHILE           reduce using rule 10 (enter_scope -> .)

    enter_scope                    shift and go to state 4

state 2

    (1) PROGRAM -> BLOCK_STMT .

    $end            reduce using rule 1 (PROGRAM -> BLOCK_STMT .)


state 3

    (0) S' -> PROGRAM .



state 4

    (2) BLOCK_STMT -> LBRACE enter_scope . DECL_INIT STMT_INIT RBRACE
    (14) DECL_INIT -> . DECL_INIT DECL
    (15) DECL_INIT -> .

    VAL             reduce using rule 15 (DECL_INIT -> .)
    VAR             reduce using rule 15 (DECL_INIT -> .)
    RBRACE          reduce using rule 15 (DECL_INIT -> .)
    LBRACE          reduce using rule 15 (DECL_INIT -> .)
    FOR             reduce using rule 15 (DECL_INIT -> .)
    WHILE           reduce using rule 15 (DECL_INIT -> .)

    DECL_INIT                      shift and go to state 5

state 5

    (2) BLOCK_STMT -> LBRACE enter_scope DECL_INIT . STMT_INIT RBRACE
    (14) DECL_INIT -> DECL_INIT . DECL
    (3) STMT_INIT -> . STMT_INIT STMT
    (4) STMT_INIT -> .
    (16) DECL -> . VAL_DECL
    (17) DECL -> . VAR_DECL
    (18) VAL_DECL -> . VAL ID EQUALS NUMBER
    (19) VAL_DECL -> . VAL ID EQUALS USER_DEFINE_VALUE
    (20) VAL_DECL -> . VAL ID EQUALS RDD_INIT
    (21) VAR_DECL -> . VAR ID EQUALS NUMBER
    (22) VAR_DECL -> . VAR ID EQUALS USER_DEFINE_VALUE
    (23) VAR_DECL -> . VAR ID EQUALS RDD_INIT

    RBRACE          reduce using rule 4 (STMT_INIT -> .)
    LBRACE          reduce using rule 4 (STMT_INIT -> .)
    FOR             reduce using rule 4 (STMT_INIT -> .)
    WHILE           reduce using rule 4 (STMT_INIT -> .)
    VAL             shift and go to state 7
    VAR             shift and go to state 10

    DECL                           shift and go to state 6
    VAR_DECL                       shift and go to state 8
    STMT_INIT                      shift and go to state 9
    VAL_DECL                       shift and go to state 11

state 6

    (14) DECL_INIT -> DECL_INIT DECL .

    VAL             reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)
    VAR             reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)
    RBRACE          reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)
    LBRACE          reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)
    FOR             reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)
    WHILE           reduce using rule 14 (DECL_INIT -> DECL_INIT DECL .)


state 7

    (18) VAL_DECL -> VAL . ID EQUALS NUMBER
    (19) VAL_DECL -> VAL . ID EQUALS USER_DEFINE_VALUE
    (20) VAL_DECL -> VAL . ID EQUALS RDD_INIT

    ID              shift and go to state 12


state 8

    (17) DECL -> VAR_DECL .

    VAL             reduce using rule 17 (DECL -> VAR_DECL .)
    VAR             reduce using rule 17 (DECL -> VAR_DECL .)
    RBRACE          reduce using rule 17 (DECL -> VAR_DECL .)
    LBRACE          reduce using rule 17 (DECL -> VAR_DECL .)
    FOR             reduce using rule 17 (DECL -> VAR_DECL .)
    WHILE           reduce using rule 17 (DECL -> VAR_DECL .)


state 9

    (2) BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT . RBRACE
    (3) STMT_INIT -> STMT_INIT . STMT
    (5) STMT -> . BLOCK_STMT
    (6) STMT -> . FOR_STMT
    (7) STMT -> . WHILE_STMT
    (2) BLOCK_STMT -> . LBRACE enter_scope DECL_INIT STMT_INIT RBRACE
    (8) FOR_STMT -> . FOR ITERABLE BLOCK_STMT
    (9) WHILE_STMT -> . WHILE ID BLOCK_STMT

    RBRACE          shift and go to state 13
    LBRACE          shift and go to state 1
    FOR             shift and go to state 14
    WHILE           shift and go to state 19

    WHILE_STMT                     shift and go to state 15
    BLOCK_STMT                     shift and go to state 18
    FOR_STMT                       shift and go to state 17
    STMT                           shift and go to state 16

state 10

    (21) VAR_DECL -> VAR . ID EQUALS NUMBER
    (22) VAR_DECL -> VAR . ID EQUALS USER_DEFINE_VALUE
    (23) VAR_DECL -> VAR . ID EQUALS RDD_INIT

    ID              shift and go to state 20


state 11

    (16) DECL -> VAL_DECL .

    VAL             reduce using rule 16 (DECL -> VAL_DECL .)
    VAR             reduce using rule 16 (DECL -> VAL_DECL .)
    RBRACE          reduce using rule 16 (DECL -> VAL_DECL .)
    LBRACE          reduce using rule 16 (DECL -> VAL_DECL .)
    FOR             reduce using rule 16 (DECL -> VAL_DECL .)
    WHILE           reduce using rule 16 (DECL -> VAL_DECL .)


state 12

    (18) VAL_DECL -> VAL ID . EQUALS NUMBER
    (19) VAL_DECL -> VAL ID . EQUALS USER_DEFINE_VALUE
    (20) VAL_DECL -> VAL ID . EQUALS RDD_INIT

    EQUALS          shift and go to state 21


state 13

    (2) BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .

    $end            reduce using rule 2 (BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .)
    RBRACE          reduce using rule 2 (BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .)
    LBRACE          reduce using rule 2 (BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .)
    FOR             reduce using rule 2 (BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .)
    WHILE           reduce using rule 2 (BLOCK_STMT -> LBRACE enter_scope DECL_INIT STMT_INIT RBRACE .)


state 14

    (8) FOR_STMT -> FOR . ITERABLE BLOCK_STMT
    (12) ITERABLE -> . ID IN CONTAINER

    ID              shift and go to state 22

    ITERABLE                       shift and go to state 23

state 15

    (7) STMT -> WHILE_STMT .

    RBRACE          reduce using rule 7 (STMT -> WHILE_STMT .)
    LBRACE          reduce using rule 7 (STMT -> WHILE_STMT .)
    FOR             reduce using rule 7 (STMT -> WHILE_STMT .)
    WHILE           reduce using rule 7 (STMT -> WHILE_STMT .)


state 16

    (3) STMT_INIT -> STMT_INIT STMT .

    RBRACE          reduce using rule 3 (STMT_INIT -> STMT_INIT STMT .)
    LBRACE          reduce using rule 3 (STMT_INIT -> STMT_INIT STMT .)
    FOR             reduce using rule 3 (STMT_INIT -> STMT_INIT STMT .)
    WHILE           reduce using rule 3 (STMT_INIT -> STMT_INIT STMT .)


state 17

    (6) STMT -> FOR_STMT .

    RBRACE          reduce using rule 6 (STMT -> FOR_STMT .)
    LBRACE          reduce using rule 6 (STMT -> FOR_STMT .)
    FOR             reduce using rule 6 (STMT -> FOR_STMT .)
    WHILE           reduce using rule 6 (STMT -> FOR_STMT .)


state 18

    (5) STMT -> BLOCK_STMT .

    RBRACE          reduce using rule 5 (STMT -> BLOCK_STMT .)
    LBRACE          reduce using rule 5 (STMT -> BLOCK_STMT .)
    FOR             reduce using rule 5 (STMT -> BLOCK_STMT .)
    WHILE           reduce using rule 5 (STMT -> BLOCK_STMT .)


state 19

    (9) WHILE_STMT -> WHILE . ID BLOCK_STMT

    ID              shift and go to state 24


state 20

    (21) VAR_DECL -> VAR ID . EQUALS NUMBER
    (22) VAR_DECL -> VAR ID . EQUALS USER_DEFINE_VALUE
    (23) VAR_DECL -> VAR ID . EQUALS RDD_INIT

    EQUALS          shift and go to state 25


state 21

    (18) VAL_DECL -> VAL ID EQUALS . NUMBER
    (19) VAL_DECL -> VAL ID EQUALS . USER_DEFINE_VALUE
    (20) VAL_DECL -> VAL ID EQUALS . RDD_INIT
    (24) USER_DEFINE_VALUE -> . USER_DEFINE STRING
    (25) RDD_INIT -> . TEXT_FILE LPAREN STRING RPAREN

    NUMBER          shift and go to state 28
    USER_DEFINE     shift and go to state 27
    TEXT_FILE       shift and go to state 26

    USER_DEFINE_VALUE              shift and go to state 29
    RDD_INIT                       shift and go to state 30

state 22

    (12) ITERABLE -> ID . IN CONTAINER

    IN              shift and go to state 31


state 23

    (8) FOR_STMT -> FOR ITERABLE . BLOCK_STMT
    (2) BLOCK_STMT -> . LBRACE enter_scope DECL_INIT STMT_INIT RBRACE

    LBRACE          shift and go to state 1

    BLOCK_STMT                     shift and go to state 32

state 24

    (9) WHILE_STMT -> WHILE ID . BLOCK_STMT
    (2) BLOCK_STMT -> . LBRACE enter_scope DECL_INIT STMT_INIT RBRACE

    LBRACE          shift and go to state 1

    BLOCK_STMT                     shift and go to state 33

state 25

    (21) VAR_DECL -> VAR ID EQUALS . NUMBER
    (22) VAR_DECL -> VAR ID EQUALS . USER_DEFINE_VALUE
    (23) VAR_DECL -> VAR ID EQUALS . RDD_INIT
    (24) USER_DEFINE_VALUE -> . USER_DEFINE STRING
    (25) RDD_INIT -> . TEXT_FILE LPAREN STRING RPAREN

    NUMBER          shift and go to state 34
    USER_DEFINE     shift and go to state 27
    TEXT_FILE       shift and go to state 26

    USER_DEFINE_VALUE              shift and go to state 35
    RDD_INIT                       shift and go to state 36

state 26

    (25) RDD_INIT -> TEXT_FILE . LPAREN STRING RPAREN

    LPAREN          shift and go to state 37


state 27

    (24) USER_DEFINE_VALUE -> USER_DEFINE . STRING

    STRING          shift and go to state 38


state 28

    (18) VAL_DECL -> VAL ID EQUALS NUMBER .

    VAL             reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)
    VAR             reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)
    RBRACE          reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)
    LBRACE          reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)
    FOR             reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)
    WHILE           reduce using rule 18 (VAL_DECL -> VAL ID EQUALS NUMBER .)


state 29

    (19) VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .

    VAL             reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)
    VAR             reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)
    RBRACE          reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)
    LBRACE          reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)
    FOR             reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)
    WHILE           reduce using rule 19 (VAL_DECL -> VAL ID EQUALS USER_DEFINE_VALUE .)


state 30

    (20) VAL_DECL -> VAL ID EQUALS RDD_INIT .

    VAL             reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)
    VAR             reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)
    RBRACE          reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)
    LBRACE          reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)
    FOR             reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)
    WHILE           reduce using rule 20 (VAL_DECL -> VAL ID EQUALS RDD_INIT .)


state 31

    (12) ITERABLE -> ID IN . CONTAINER
    (13) CONTAINER -> . ID

    ID              shift and go to state 40

    CONTAINER                      shift and go to state 39

state 32

    (8) FOR_STMT -> FOR ITERABLE BLOCK_STMT .

    RBRACE          reduce using rule 8 (FOR_STMT -> FOR ITERABLE BLOCK_STMT .)
    LBRACE          reduce using rule 8 (FOR_STMT -> FOR ITERABLE BLOCK_STMT .)
    FOR             reduce using rule 8 (FOR_STMT -> FOR ITERABLE BLOCK_STMT .)
    WHILE           reduce using rule 8 (FOR_STMT -> FOR ITERABLE BLOCK_STMT .)


state 33

    (9) WHILE_STMT -> WHILE ID BLOCK_STMT .

    RBRACE          reduce using rule 9 (WHILE_STMT -> WHILE ID BLOCK_STMT .)
    LBRACE          reduce using rule 9 (WHILE_STMT -> WHILE ID BLOCK_STMT .)
    FOR             reduce using rule 9 (WHILE_STMT -> WHILE ID BLOCK_STMT .)
    WHILE           reduce using rule 9 (WHILE_STMT -> WHILE ID BLOCK_STMT .)


state 34

    (21) VAR_DECL -> VAR ID EQUALS NUMBER .

    VAL             reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)
    VAR             reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)
    RBRACE          reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)
    LBRACE          reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)
    FOR             reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)
    WHILE           reduce using rule 21 (VAR_DECL -> VAR ID EQUALS NUMBER .)


state 35

    (22) VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .

    VAL             reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)
    VAR             reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)
    RBRACE          reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)
    LBRACE          reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)
    FOR             reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)
    WHILE           reduce using rule 22 (VAR_DECL -> VAR ID EQUALS USER_DEFINE_VALUE .)


state 36

    (23) VAR_DECL -> VAR ID EQUALS RDD_INIT .

    VAL             reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)
    VAR             reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)
    RBRACE          reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)
    LBRACE          reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)
    FOR             reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)
    WHILE           reduce using rule 23 (VAR_DECL -> VAR ID EQUALS RDD_INIT .)


state 37

    (25) RDD_INIT -> TEXT_FILE LPAREN . STRING RPAREN

    STRING          shift and go to state 41


state 38

    (24) USER_DEFINE_VALUE -> USER_DEFINE STRING .

    VAL             reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)
    VAR             reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)
    RBRACE          reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)
    LBRACE          reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)
    FOR             reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)
    WHILE           reduce using rule 24 (USER_DEFINE_VALUE -> USER_DEFINE STRING .)


state 39

    (12) ITERABLE -> ID IN CONTAINER .

    LBRACE          reduce using rule 12 (ITERABLE -> ID IN CONTAINER .)


state 40

    (13) CONTAINER -> ID .

    LBRACE          reduce using rule 13 (CONTAINER -> ID .)


state 41

    (25) RDD_INIT -> TEXT_FILE LPAREN STRING . RPAREN

    RPAREN          shift and go to state 42


state 42

    (25) RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .

    VAL             reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)
    VAR             reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)
    RBRACE          reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)
    LBRACE          reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)
    FOR             reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)
    WHILE           reduce using rule 25 (RDD_INIT -> TEXT_FILE LPAREN STRING RPAREN .)

